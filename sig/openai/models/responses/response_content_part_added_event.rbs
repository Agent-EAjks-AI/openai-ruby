module OpenAI
  module Models
    module Responses
      type response_content_part_added_event =
        {
          content_index: Integer,
          item_id: String,
          output_index: Integer,
          part: OpenAI::Responses::ResponseContentPartAddedEvent::part,
          sequence_number: Integer,
          type: :"response.content_part.added"
        }

      class ResponseContentPartAddedEvent < OpenAI::Internal::Type::BaseModel
        attr_accessor content_index: Integer

        attr_accessor item_id: String

        attr_accessor output_index: Integer

        attr_accessor part: OpenAI::Responses::ResponseContentPartAddedEvent::part

        attr_accessor sequence_number: Integer

        attr_accessor type: :"response.content_part.added"

        def initialize: (
          content_index: Integer,
          item_id: String,
          output_index: Integer,
          part: OpenAI::Responses::ResponseContentPartAddedEvent::part,
          sequence_number: Integer,
          ?type: :"response.content_part.added"
        ) -> void

        type part =
          OpenAI::Responses::ResponseOutputText
          | OpenAI::Responses::ResponseOutputRefusal

        module Part
          extend OpenAI::Internal::Type::Union

          def self?.variants: -> ::Array[OpenAI::Responses::ResponseContentPartAddedEvent::part]
        end
      end
    end
  end
end
