module OpenAI
  module Models
    module Responses
      type response_reasoning_summary_part_done_event =
        {
          item_id: String,
          output_index: Integer,
          part: OpenAI::Responses::ResponseReasoningSummaryPartDoneEvent::Part,
          sequence_number: Integer,
          summary_index: Integer,
          type: :"response.reasoning_summary_part.done"
        }

      class ResponseReasoningSummaryPartDoneEvent < OpenAI::Internal::Type::BaseModel
        attr_accessor item_id: String

        attr_accessor output_index: Integer

        attr_accessor part: OpenAI::Responses::ResponseReasoningSummaryPartDoneEvent::Part

        attr_accessor sequence_number: Integer

        attr_accessor summary_index: Integer

        attr_accessor type: :"response.reasoning_summary_part.done"

        def initialize: (
          item_id: String,
          output_index: Integer,
          part: OpenAI::Responses::ResponseReasoningSummaryPartDoneEvent::Part,
          sequence_number: Integer,
          summary_index: Integer,
          ?type: :"response.reasoning_summary_part.done"
        ) -> void

        def to_hash: -> {
          item_id: String,
          output_index: Integer,
          part: OpenAI::Responses::ResponseReasoningSummaryPartDoneEvent::Part,
          sequence_number: Integer,
          summary_index: Integer,
          type: :"response.reasoning_summary_part.done"
        }

        type part = { text: String, type: :summary_text }

        class Part < OpenAI::Internal::Type::BaseModel
          attr_accessor text: String

          attr_accessor type: :summary_text

          def initialize: (text: String, ?type: :summary_text) -> void

          def to_hash: -> { text: String, type: :summary_text }
        end
      end
    end
  end
end
