module OpenAI
  module Models
    module Responses
      type computer_tool =
        {
          display_height: Integer,
          display_width: Integer,
          environment: OpenAI::Responses::ComputerTool::environment,
          type: :computer_use_preview
        }

      class ComputerTool < OpenAI::Internal::Type::BaseModel
        attr_accessor display_height: Integer

        attr_accessor display_width: Integer

        attr_accessor environment: OpenAI::Responses::ComputerTool::environment

        attr_accessor type: :computer_use_preview

        def initialize: (
          display_height: Integer,
          display_width: Integer,
          environment: OpenAI::Responses::ComputerTool::environment,
          ?type: :computer_use_preview
        ) -> void

        type environment = :windows | :mac | :linux | :ubuntu | :browser

        module Environment
          extend OpenAI::Internal::Type::Enum

          WINDOWS: :windows
          MAC: :mac
          LINUX: :linux
          UBUNTU: :ubuntu
          BROWSER: :browser

          def self?.values: -> ::Array[OpenAI::Responses::ComputerTool::environment]
        end
      end
    end
  end
end
