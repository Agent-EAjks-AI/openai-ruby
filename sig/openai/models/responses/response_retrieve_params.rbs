module OpenAI
  module Models
    module Responses
      type response_retrieve_params =
        {
          include: ::Array[OpenAI::Models::Responses::response_includable],
          include_obfuscation: bool,
          starting_after: Integer
        }
        & OpenAI::Internal::Type::request_parameters

      class ResponseRetrieveParams < OpenAI::Internal::Type::BaseModel
        extend OpenAI::Internal::Type::RequestParameters::Converter
        include OpenAI::Internal::Type::RequestParameters

        attr_reader include: ::Array[OpenAI::Models::Responses::response_includable]?

        def include=: (
          ::Array[OpenAI::Models::Responses::response_includable]
        ) -> ::Array[OpenAI::Models::Responses::response_includable]

        attr_reader include_obfuscation: bool?

        def include_obfuscation=: (bool) -> bool

        attr_reader starting_after: Integer?

        def starting_after=: (Integer) -> Integer

        def initialize: (
          ?include: ::Array[OpenAI::Models::Responses::response_includable],
          ?include_obfuscation: bool,
          ?starting_after: Integer,
          ?request_options: OpenAI::request_opts
        ) -> void

        def to_hash: -> {
          include: ::Array[OpenAI::Models::Responses::response_includable],
          include_obfuscation: bool,
          starting_after: Integer,
          request_options: OpenAI::RequestOptions
        }
      end
    end
  end
end
