module OpenAI
  module Models
    module Responses
      type response_function_web_search =
        {
          id: String,
          status: OpenAI::Responses::ResponseFunctionWebSearch::status,
          type: :web_search_call
        }

      class ResponseFunctionWebSearch < OpenAI::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor status: OpenAI::Responses::ResponseFunctionWebSearch::status

        attr_accessor type: :web_search_call

        def initialize: (
          id: String,
          status: OpenAI::Responses::ResponseFunctionWebSearch::status,
          ?type: :web_search_call
        ) -> void

        type status = :in_progress | :searching | :completed | :failed

        module Status
          extend OpenAI::Internal::Type::Enum

          IN_PROGRESS: :in_progress
          SEARCHING: :searching
          COMPLETED: :completed
          FAILED: :failed

          def self?.values: -> ::Array[OpenAI::Responses::ResponseFunctionWebSearch::status]
        end
      end
    end
  end
end
