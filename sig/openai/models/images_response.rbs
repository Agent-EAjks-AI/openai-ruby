module OpenAI
  module Models
    type images_response =
      {
        created: Integer,
        data: ::Array[OpenAI::Image],
        usage: OpenAI::ImagesResponse::Usage
      }

    class ImagesResponse < OpenAI::Internal::Type::BaseModel
      attr_accessor created: Integer

      attr_reader data: ::Array[OpenAI::Image]?

      def data=: (::Array[OpenAI::Image]) -> ::Array[OpenAI::Image]

      attr_reader usage: OpenAI::ImagesResponse::Usage?

      def usage=: (
        OpenAI::ImagesResponse::Usage
      ) -> OpenAI::ImagesResponse::Usage

      def initialize: (
        created: Integer,
        ?data: ::Array[OpenAI::Image],
        ?usage: OpenAI::ImagesResponse::Usage
      ) -> void

      def to_hash: -> {
        created: Integer,
        data: ::Array[OpenAI::Image],
        usage: OpenAI::ImagesResponse::Usage
      }

      type usage =
        {
          input_tokens: Integer,
          input_tokens_details: OpenAI::ImagesResponse::Usage::InputTokensDetails,
          output_tokens: Integer,
          total_tokens: Integer
        }

      class Usage < OpenAI::Internal::Type::BaseModel
        attr_accessor input_tokens: Integer

        attr_accessor input_tokens_details: OpenAI::ImagesResponse::Usage::InputTokensDetails

        attr_accessor output_tokens: Integer

        attr_accessor total_tokens: Integer

        def initialize: (
          input_tokens: Integer,
          input_tokens_details: OpenAI::ImagesResponse::Usage::InputTokensDetails,
          output_tokens: Integer,
          total_tokens: Integer
        ) -> void

        def to_hash: -> {
          input_tokens: Integer,
          input_tokens_details: OpenAI::ImagesResponse::Usage::InputTokensDetails,
          output_tokens: Integer,
          total_tokens: Integer
        }

        type input_tokens_details =
          { image_tokens: Integer, text_tokens: Integer }

        class InputTokensDetails < OpenAI::Internal::Type::BaseModel
          attr_accessor image_tokens: Integer

          attr_accessor text_tokens: Integer

          def initialize: (image_tokens: Integer, text_tokens: Integer) -> void

          def to_hash: -> { image_tokens: Integer, text_tokens: Integer }
        end
      end
    end
  end
end
