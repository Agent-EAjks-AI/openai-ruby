module OpenAI
  module Models
    module Beta
      module Threads
        module Runs
          type code_interpreter_output_image =
            {
              index: Integer,
              type: :image,
              image: OpenAI::Beta::Threads::Runs::CodeInterpreterOutputImage::Image
            }

          class CodeInterpreterOutputImage < OpenAI::Internal::Type::BaseModel
            attr_accessor index: Integer

            attr_accessor type: :image

            attr_reader image: OpenAI::Beta::Threads::Runs::CodeInterpreterOutputImage::Image?

            def image=: (
              OpenAI::Beta::Threads::Runs::CodeInterpreterOutputImage::Image
            ) -> OpenAI::Beta::Threads::Runs::CodeInterpreterOutputImage::Image

            def initialize: (
              index: Integer,
              ?image: OpenAI::Beta::Threads::Runs::CodeInterpreterOutputImage::Image,
              ?type: :image
            ) -> void

            type image = { file_id: String }

            class Image < OpenAI::Internal::Type::BaseModel
              attr_reader file_id: String?

              def file_id=: (String) -> String

              def initialize: (?file_id: String) -> void
            end
          end
        end
      end
    end
  end
end
