module OpenAI
  module Models
    module FineTuning
      type reinforcement_method =
        {
          grader: OpenAI::FineTuning::ReinforcementMethod::grader,
          hyperparameters: OpenAI::FineTuning::ReinforcementHyperparameters
        }

      class ReinforcementMethod < OpenAI::Internal::Type::BaseModel
        attr_accessor grader: OpenAI::FineTuning::ReinforcementMethod::grader

        attr_reader hyperparameters: OpenAI::FineTuning::ReinforcementHyperparameters?

        def hyperparameters=: (
          OpenAI::FineTuning::ReinforcementHyperparameters
        ) -> OpenAI::FineTuning::ReinforcementHyperparameters

        def initialize: (
          grader: OpenAI::FineTuning::ReinforcementMethod::grader,
          ?hyperparameters: OpenAI::FineTuning::ReinforcementHyperparameters
        ) -> void

        type grader =
          OpenAI::Graders::StringCheckGrader
          | OpenAI::Graders::TextSimilarityGrader
          | OpenAI::Graders::PythonGrader
          | OpenAI::Graders::ScoreModelGrader
          | OpenAI::Graders::MultiGrader

        module Grader
          extend OpenAI::Internal::Type::Union

          def self?.variants: -> ::Array[OpenAI::FineTuning::ReinforcementMethod::grader]
        end
      end
    end
  end
end
