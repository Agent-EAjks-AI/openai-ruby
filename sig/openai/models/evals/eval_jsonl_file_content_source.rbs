module OpenAI
  module Models
    class EvalJSONLFileContentSource = Evals::EvalJSONLFileContentSource

    module Evals
      type eval_jsonl_file_content_source =
        {
          content: ::Array[OpenAI::Evals::EvalJSONLFileContentSource::Content],
          type: :file_content
        }

      class EvalJSONLFileContentSource < OpenAI::Internal::Type::BaseModel
        attr_accessor content: ::Array[OpenAI::Evals::EvalJSONLFileContentSource::Content]

        attr_accessor type: :file_content

        def initialize: (
          content: ::Array[OpenAI::Evals::EvalJSONLFileContentSource::Content],
          ?type: :file_content
        ) -> void

        type content =
          { item: ::Hash[Symbol, top], sample: ::Hash[Symbol, top] }

        class Content < OpenAI::Internal::Type::BaseModel
          attr_accessor item: ::Hash[Symbol, top]

          attr_reader sample: ::Hash[Symbol, top]?

          def sample=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

          def initialize: (
            item: ::Hash[Symbol, top],
            ?sample: ::Hash[Symbol, top]
          ) -> void
        end
      end
    end
  end
end
