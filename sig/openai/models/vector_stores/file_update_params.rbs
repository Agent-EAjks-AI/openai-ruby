module OpenAI
  module Models
    module VectorStores
      type file_update_params =
        {
          vector_store_id: String,
          attributes: ::Hash[Symbol, OpenAI::VectorStores::FileUpdateParams::attribute]?
        }
        & OpenAI::Internal::Type::request_parameters

      class FileUpdateParams < OpenAI::Internal::Type::BaseModel
        extend OpenAI::Internal::Type::RequestParameters::Converter
        include OpenAI::Internal::Type::RequestParameters

        attr_accessor vector_store_id: String

        attr_accessor attributes: ::Hash[Symbol, OpenAI::VectorStores::FileUpdateParams::attribute]?

        def initialize: (
          vector_store_id: String,
          attributes: ::Hash[Symbol, OpenAI::VectorStores::FileUpdateParams::attribute]?,
          ?request_options: OpenAI::request_opts
        ) -> void

        type attribute = String | Float | bool

        module Attribute
          extend OpenAI::Internal::Type::Union

          def self?.variants: -> ::Array[OpenAI::VectorStores::FileUpdateParams::attribute]
        end
      end
    end
  end
end
