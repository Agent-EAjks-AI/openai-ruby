module OpenAI
  module Models
    class StringCheckGrader = Graders::StringCheckGrader

    module Graders
      type string_check_grader =
        {
          input: String,
          name: String,
          operation: OpenAI::Graders::StringCheckGrader::operation,
          reference: String,
          type: :string_check
        }

      class StringCheckGrader < OpenAI::Internal::Type::BaseModel
        attr_accessor input: String

        attr_accessor name: String

        attr_accessor operation: OpenAI::Graders::StringCheckGrader::operation

        attr_accessor reference: String

        attr_accessor type: :string_check

        def initialize: (
          input: String,
          name: String,
          operation: OpenAI::Graders::StringCheckGrader::operation,
          reference: String,
          ?type: :string_check
        ) -> void

        type operation = :eq | :ne | :like | :ilike

        module Operation
          extend OpenAI::Internal::Type::Enum

          EQ: :eq
          NE: :ne
          LIKE: :like
          ILIKE: :ilike

          def self?.values: -> ::Array[OpenAI::Graders::StringCheckGrader::operation]
        end
      end
    end
  end
end
