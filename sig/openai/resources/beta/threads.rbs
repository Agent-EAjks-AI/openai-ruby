module OpenAI
  module Resources
    class Beta
      class Threads
        attr_reader runs: OpenAI::Resources::Beta::Threads::Runs

        attr_reader messages: OpenAI::Resources::Beta::Threads::Messages

        def create: (
          ?messages: ::Array[OpenAI::Beta::ThreadCreateParams::Message],
          ?metadata: OpenAI::Models::metadata?,
          ?tool_resources: OpenAI::Beta::ThreadCreateParams::ToolResources?,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Beta::Thread

        def retrieve: (
          String thread_id,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Beta::Thread

        def update: (
          String thread_id,
          ?metadata: OpenAI::Models::metadata?,
          ?tool_resources: OpenAI::Beta::ThreadUpdateParams::ToolResources?,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Beta::Thread

        def delete: (
          String thread_id,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Beta::ThreadDeleted

        def create_and_run: (
          assistant_id: String,
          ?instructions: String?,
          ?max_completion_tokens: Integer?,
          ?max_prompt_tokens: Integer?,
          ?metadata: OpenAI::Models::metadata?,
          ?model: OpenAI::Models::Beta::ThreadCreateAndRunParams::model?,
          ?parallel_tool_calls: bool,
          ?response_format: OpenAI::Models::Beta::assistant_response_format_option?,
          ?temperature: Float?,
          ?thread: OpenAI::Beta::ThreadCreateAndRunParams::Thread,
          ?tool_choice: OpenAI::Models::Beta::assistant_tool_choice_option?,
          ?tool_resources: OpenAI::Beta::ThreadCreateAndRunParams::ToolResources?,
          ?tools: ::Array[OpenAI::Models::Beta::assistant_tool]?,
          ?top_p: Float?,
          ?truncation_strategy: OpenAI::Beta::TruncationObject?,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Beta::Threads::Run

        def stream_raw: (
          assistant_id: String,
          ?instructions: String?,
          ?max_completion_tokens: Integer?,
          ?max_prompt_tokens: Integer?,
          ?metadata: OpenAI::Models::metadata?,
          ?model: OpenAI::Models::Beta::ThreadCreateAndRunParams::model?,
          ?parallel_tool_calls: bool,
          ?response_format: OpenAI::Models::Beta::assistant_response_format_option?,
          ?temperature: Float?,
          ?thread: OpenAI::Beta::ThreadCreateAndRunParams::Thread,
          ?tool_choice: OpenAI::Models::Beta::assistant_tool_choice_option?,
          ?tool_resources: OpenAI::Beta::ThreadCreateAndRunParams::ToolResources?,
          ?tools: ::Array[OpenAI::Models::Beta::assistant_tool]?,
          ?top_p: Float?,
          ?truncation_strategy: OpenAI::Beta::TruncationObject?,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Internal::Stream[OpenAI::Models::Beta::assistant_stream_event]

        def initialize: (client: OpenAI::Client) -> void
      end
    end
  end
end
