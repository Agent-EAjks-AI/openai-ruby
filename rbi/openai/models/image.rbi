# typed: strong

module OpenAI
  module Models
    class Image < OpenAI::Internal::Type::BaseModel
      OrHash = T.type_alias { T.any(OpenAI::Image, OpenAI::Internal::AnyHash) }

      # The base64-encoded JSON of the generated image. Default value for `gpt-image-1`,
      # and only present if `response_format` is set to `b64_json` for `dall-e-2` and
      # `dall-e-3`.
      sig { returns(T.nilable(String)) }
      attr_reader :b64_json

      sig { params(b64_json: String).void }
      attr_writer :b64_json

      # For `dall-e-3` only, the revised prompt that was used to generate the image.
      sig { returns(T.nilable(String)) }
      attr_reader :revised_prompt

      sig { params(revised_prompt: String).void }
      attr_writer :revised_prompt

      # When using `dall-e-2` or `dall-e-3`, the URL of the generated image if
      # `response_format` is set to `url` (default value). Unsupported for
      # `gpt-image-1`.
      sig { returns(T.nilable(String)) }
      attr_reader :url

      sig { params(url: String).void }
      attr_writer :url

      # Represents the content or the URL of an image generated by the OpenAI API.
      sig do
        params(b64_json: String, revised_prompt: String, url: String).returns(
          T.attached_class
        )
      end
      def self.new(
        # The base64-encoded JSON of the generated image. Default value for `gpt-image-1`,
        # and only present if `response_format` is set to `b64_json` for `dall-e-2` and
        # `dall-e-3`.
        b64_json: nil,
        # For `dall-e-3` only, the revised prompt that was used to generate the image.
        revised_prompt: nil,
        # When using `dall-e-2` or `dall-e-3`, the URL of the generated image if
        # `response_format` is set to `url` (default value). Unsupported for
        # `gpt-image-1`.
        url: nil
      )
      end

      sig do
        override.returns(
          { b64_json: String, revised_prompt: String, url: String }
        )
      end
      def to_hash
      end
    end
  end
end
